Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import os
import mlflow
from mlflow.models import infer_signature
from sklearn.metrics import accuracy_score, confusion_matrix

# Set up MLFlow tracking URI and authentication
MLFLOW_TRACKING_URI = "https://dagshub.com/vamsisaigarapati/insurance_renewal.mlflow"
os.environ['MLFLOW_TRACKING_USERNAME'] = 'vamsisaigarapati'
os.environ['MLFLOW_TRACKING_PASSWORD'] = '9a9f8cd0f5d6a9b86bfb91d57b6f708bf327ae6a'

# Configure MLFlow
mlflow.set_tracking_uri(uri=MLFLOW_TRACKING_URI)
mlflow.set_experiment("insurance_renewal-eas501")


with mlflow.start_run():
    # Log the hyperparameters
    mlflow.log_params(params)
    mlflow.set_tag("mlflow.runName", f"Experiment1-Basic- LogisticRegression")
    # Log metrics
    mlflow.log_metric("f1-score", score)
    mlflow.log_metric("accuracy", accuracy)
    mlflow.log_metric("true_positives", tp)
    mlflow.log_metric("true_negatives", tn)
    mlflow.log_metric("false_positives", fp)
    mlflow.log_metric("false_negatives", fn)

    # Infer the model signature
    signature = infer_signature(X_test, best_model.predict(X_test))

    # Log the model
    model_info = mlflow.sklearn.log_model(
        sk_model=best_model,
        artifact_path="insurance_renewal",
        signature=signature,
        input_example=X_test.iloc[:1],  # Provide one example input
        registered_model_name="LogisticRegression-1",
    )

------------------

----- stdout -----
🏃 View run Experiment1-Basic- LogisticRegression at: https://dagshub.com/vamsisaigarapati/insurance_renewal.mlflow/#/experiments/1/runs/47a9f2ca0e0b40e1ac9998e69433fa0e
🧪 View experiment at: https://dagshub.com/vamsisaigarapati/insurance_renewal.mlflow/#/experiments/1
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[29], line 21[0m
[1;32m     19[0m mlflow[38;5;241m.[39mset_tag([38;5;124m"[39m[38;5;124mmlflow.runName[39m[38;5;124m"[39m, [38;5;124mf[39m[38;5;124m"[39m[38;5;124mExperiment1-Basic- LogisticRegression[39m[38;5;124m"[39m)
[1;32m     20[0m [38;5;66;03m# Log metrics[39;00m
[0;32m---> 21[0m mlflow[38;5;241m.[39mlog_metric([38;5;124m"[39m[38;5;124mf1-score[39m[38;5;124m"[39m, score)
[1;32m     22[0m mlflow[38;5;241m.[39mlog_metric([38;5;124m"[39m[38;5;124maccuracy[39m[38;5;124m"[39m, accuracy)
[1;32m     23[0m mlflow[38;5;241m.[39mlog_metric([38;5;124m"[39m[38;5;124mtrue_positives[39m[38;5;124m"[39m, tp)

[0;31mNameError[0m: name 'score' is not defined

